}
load("cleaning/output/hist_property_basic5.Rdata")
# Examine the data. 31080 has the highest frequency. It should be Los Angeles Metro Area
hist_property_basic5_full <- filter(hist_property_basic5, !is.na(lat), !is.na(lon))
hist_property_basic5_Los <- filter(hist_property_basic5_full, cbsa==31080)
hist_property_basic5_Los10p <- sample_frac(hist_property_basic5_Los, 0.1)
hist_property_basic5_full2p <- hist_property_basic5_full %>% group_by(cbsa) %>% sample_frac(0.02)
write.csv(hist_property_basic5_Los,"cleaning/output/hist_property_basic5_LoS.csv", row.names = FALSE)
write.csv(hist_property_basic5_Los10p,"cleaning/output/hist_property_basic5_Los10p.csv", row.names = FALSE)
write.csv(hist_property_basic5_full2p,"cleaning/output/hist_property_basic5_full2p.csv", row.names = FALSE)
hist_property_basic5 %<>% select(variable_selection)
hist_property_basic5_full <- filter(hist_property_basic5, !is.na(lat), !is.na(lon))
hist_property_basic5_Los <- filter(hist_property_basic5_full, cbsa==31080)
hist_property_basic5_Los10p <- sample_frac(hist_property_basic5_Los, 0.1)
hist_property_basic5_full2p <- hist_property_basic5_full %>% group_by(cbsa) %>% sample_frac(0.02)
write.csv(hist_property_basic5_Los,"cleaning/output/hist_property_basic5_se_LoS.csv", row.names = FALSE)
write.csv(hist_property_basic5_Los10p,"cleaning/output/hist_property_basic5_se_Los10p.csv", row.names = FALSE)
write.csv(hist_property_basic5_full2p,"cleaning/output/hist_property_basic5_se_full2p.csv", row.names = FALSE)
library(epiDisplay)
library(readxl)
library(plotly)
library(data.table)
library(tidyverse)
library(magrittr)
rm(list=ls())
variable_selection <- read_excel("raw/CoreLogic/variable selection/221016, Historical Property 5.xlsx") %>%
rename(list = "...1") %>%
pull(list) %>%
unlist %>%
as.numeric %>%
na.omit
hist_property_basic5_Los <- fread(file = "cleaning/output/hist_property_basic5_LoS.csv", select = variable_selection) %>%
mutate(build_age=2015-year_built, effective_build_age=2015-effective_year_built) %>%
mutate(effective_build_age=ifelse(is.na(effective_build_age),build_age,effective_build_age)) %>%
filter(is.element(property_indicator_code, c(10,11,21,22)))
single_family_homes <- hist_property_basic5_Los %>% filter(property_indicator_code==10)
condo <- hist_property_basic5_Los %>% filter(property_indicator_code==11)
duplex <- hist_property_basic5_Los %>% filter(property_indicator_code==21)
apartment <- hist_property_basic5_Los %>% filter(property_indicator_code==22)
library(epiDisplay)
library(readxl)
library(plotly)
library(data.table)
library(tidyverse)
library(magrittr)
rm(list=ls())
variable_selection <- read_excel("raw/CoreLogic/variable selection/221016, Historical Property 5.xlsx") %>%
rename(list = "...1") %>%
pull(list) %>%
unlist %>%
as.numeric %>%
na.omit
hist_property_basic5_Los <- fread(file = "cleaning/output/hist_property_basic5_LoS.csv", select = variable_selection) %>%
mutate(build_age=2015-year_built, effective_build_age=2015-effective_year_built) %>%
mutate(effective_build_age=ifelse(is.na(effective_build_age),build_age,effective_build_age)) %>%
filter(is.element(property_indicator_code, c(10,11,21,22)))
single_family_homes <- hist_property_basic5_Los %>% filter(property_indicator_code==10)
condo <- hist_property_basic5_Los %>% filter(property_indicator_code==11)
duplex <- hist_property_basic5_Los %>% filter(property_indicator_code==21)
apartment <- hist_property_basic5_Los %>% filter(property_indicator_code==22)
apartment_size_median <- quantile(apartment$living_square_feet_all_buildings/apartment$number_of_units,0.5, na.rm=T)
apartment_bed_median <- quantile(apartment$bedrooms_all_buildings/apartment$number_of_units,0.5, na.rm=T)
apartment_unit_median <- quantile(apartment$number_of_units,0.5, na.rm=T)
# Adjust NA sets
summary(apartment$number_of_units)
apartment_adj <- apartment %>%
mutate(adjustment_note=ifelse(is.na(number_of_units),
"Missing unit, assign median","Original")) %>%
mutate(number_of_units=ifelse(adjustment_note=="Missing unit, assign median",
floor(apartment_unit_median),number_of_units))
apartment_adj %<>%
mutate(adjustment_note=ifelse(adjustment_note=="Missing unit, assign median" & !is.na(bedrooms_all_buildings),
"Missing unit, infer from bedroom",adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Missing unit, infer from bedroom",
ceiling(bedrooms_all_buildings/apartment_bed_median),number_of_units))
apartment_adj %<>%
mutate(adjustment_note=ifelse(adjustment_note=="Missing unit, assign median" & !is.na(living_square_feet_all_buildings),
"Missing unit, infer from living space",adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Missing unit, infer from living space",
ceiling(living_square_feet_all_buildings/apartment_size_median),number_of_units))
tab1(apartment_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(apartment_adj$number_of_units)
# Adjust upper outliers
apartment_adj %<>%
mutate(adjustment_note= ifelse(living_square_feet_all_buildings/number_of_units> 3000,
"Upper outlier, cap living space", adjustment_note) %>%
ifelse(!is.na(living_square_feet_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Upper outlier, cap living space",
ceiling(living_square_feet_all_buildings/3000),number_of_units))
tab1(apartment_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(apartment_adj$number_of_units)
apartment_adj %<>%
mutate(adjustment_note=ifelse(bedrooms_all_buildings/number_of_units >= 4,
"Upper outlier, cap bedroom",adjustment_note) %>%
ifelse(!is.na(bedrooms_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Upper outlier, cap bedroom",
ceiling(bedrooms_all_buildings/apartment_bed_median),number_of_units))
tab1(apartment_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(apartment_adj$number_of_units)
# Adjust lower outliers
apartment_adj %<>%
mutate(adjustment_note=ifelse(living_square_feet_all_buildings/number_of_units < 200,
"Lower outlier, cap living space",adjustment_note) %>%
ifelse(!is.na(living_square_feet_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Lower outlier, cap living space",
floor(living_square_feet_all_buildings/200),number_of_units))
apartment_adj %<>%
mutate(adjustment_note=ifelse(bedrooms_all_buildings/number_of_units < 1,
"Lower outlier, cap bedroom",adjustment_note)%>%
ifelse(!is.na(bedrooms_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Lower outlier, cap bedroom",
bedrooms_all_buildings,number_of_units))
apartment_adj %<>%
mutate(number_of_units=ifelse(number_of_units==0,
1,number_of_units))
tab1(apartment_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(apartment_adj$number_of_units)
apartment_adj <- data.frame(lapply(apartment_adj,rep,apartment_adj$number_of_units)) %>%
mutate(assessed_total_value=assessed_total_value/number_of_units,
assessed_land_value=assessed_land_value/number_of_units,
assessed_improvement_value=assessed_improvement_value/number_of_units,
land_square_footage=land_square_footage/number_of_units,
bedrooms_all_buildings=bedrooms_all_buildings/number_of_units,
living_square_feet_all_buildings=living_square_feet_all_buildings/number_of_units)
condo_adj <- condo %>%
mutate(land_square_footage=land_square_footage/number_of_units) %>%
mutate(adjustment_note= "Original")
single_family_homes_adj <- single_family_homes %>%
mutate(adjustment_note= "Original")
duplex_size_median <- quantile(duplex$living_square_feet_all_buildings/duplex$number_of_units,0.5, na.rm=T)
duplex_bed_median <- quantile(duplex$bedrooms_all_buildings/duplex$number_of_units,0.5, na.rm=T)
duplex_unit_median <- quantile(duplex$number_of_units,0.5, na.rm=T)
# Adjust NA sets
summary(duplex$number_of_units)
duplex_adj <- duplex %>%
mutate(adjustment_note=ifelse(is.na(number_of_units),
"Missing unit, assign median","Original")) %>%
mutate(number_of_units=ifelse(adjustment_note=="Missing unit, assign median",
floor(duplex_unit_median),number_of_units))
duplex_adj %<>%
mutate(adjustment_note=ifelse(adjustment_note=="Missing unit, assign median" & !is.na(bedrooms_all_buildings),
"Missing unit, infer from bedroom",adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Missing unit, infer from bedroom",
ceiling(bedrooms_all_buildings/duplex_bed_median),number_of_units))
duplex_adj %<>%
mutate(adjustment_note=ifelse(adjustment_note=="Missing unit, assign median" & !is.na(living_square_feet_all_buildings),
"Missing unit, infer from living space",adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Missing unit, infer from living space",
ceiling(living_square_feet_all_buildings/duplex_size_median),number_of_units))
tab1(duplex_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(duplex_adj$number_of_units)
# Adjust upper outliers
duplex_adj %<>%
mutate(adjustment_note= ifelse(living_square_feet_all_buildings/number_of_units> 5000,
"Upper outlier, cap living space", adjustment_note) %>%
ifelse(!is.na(living_square_feet_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Upper outlier, cap living space",
ceiling(living_square_feet_all_buildings/5000),number_of_units))
tab1(duplex_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(duplex_adj$number_of_units)
duplex_adj %<>%
mutate(adjustment_note=ifelse(bedrooms_all_buildings/number_of_units >= 4,
"Upper outlier, cap bedroom",adjustment_note) %>%
ifelse(!is.na(bedrooms_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Upper outlier, cap bedroom",
ceiling(bedrooms_all_buildings/duplex_bed_median),number_of_units))
tab1(duplex_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(duplex_adj$number_of_units)
# Adjust lower outliers
duplex_adj %<>%
mutate(adjustment_note=ifelse(living_square_feet_all_buildings/number_of_units < 400,
"Lower outlier, cap living space",adjustment_note) %>%
ifelse(!is.na(living_square_feet_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Lower outlier, cap living space",
floor(living_square_feet_all_buildings/400),number_of_units))
duplex_adj %<>%
mutate(adjustment_note=ifelse(bedrooms_all_buildings/number_of_units < 1,
"Lower outlier, cap bedroom",adjustment_note)%>%
ifelse(!is.na(bedrooms_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Lower outlier, cap bedroom",
bedrooms_all_buildings,number_of_units))
duplex_adj %<>%
mutate(number_of_units=ifelse(number_of_units==0,
1,number_of_units))
tab1(duplex_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(duplex_adj$number_of_units)
duplex_adj <- data.frame(lapply(duplex_adj,rep,duplex_adj$number_of_units)) %>%
mutate(assessed_total_value=assessed_total_value/number_of_units,
assessed_land_value=assessed_land_value/number_of_units,
assessed_improvement_value=assessed_improvement_value/number_of_units,
land_square_footage=land_square_footage/number_of_units,
bedrooms_all_buildings=bedrooms_all_buildings/number_of_units,
living_square_feet_all_buildings=living_square_feet_all_buildings/number_of_units)
hist_property_basic5_Los_adj <- rbind(single_family_homes_adj,apartment_adj,condo_adj,duplex_adj)
hist_property_basic5_Los_adj10p <- sample_frac(hist_property_basic5_Los_adj, 0.1)
write.csv(hist_property_basic5_Los_adj,"cleaning/output/hist_property_basic5_Los_adj.csv", row.names = FALSE)
write.csv(hist_property_basic5_Los_adj10p,"cleaning/output/hist_property_basic5_Los_adj10p.csv", row.names = FALSE)
library(tidyverse)
library(readxl)
library(data.table)
library(magrittr)
library(janitor)
rm(list=ls())
setwd("C:/Users/dmh5950/OneDrive - The Pennsylvania State University/Los Angeles Zoning, 2022")
# variable_selection <- read_excel("raw/CoreLogic/variable selection/221016, Historical Property 5.xlsx") %>%
#  rename(list = "...1") %>%
#  pull(list) %>%
#  unlist %>%
#  as.numeric %>%
#  na.omit
setwd("C:/Users/dmh5950/OneDrive - The Pennsylvania State University/Los Angeles Zoning, 2022")
if (!file.exists("cleaning/output/hist_property_basic5.Rdata")){
hist_property_basic5 <- fread(file = "raw/CoreLogic/historical/hist_property_basic5/hist_property_basic5.txt", sep = "|", colClasses=list(character=c(14,1))) %>% dplyr::rename(cbsa = "SITUS CORE BASED STATISTICAL AREA (CBSA)", lat = "PARCEL LEVEL LATITUDE", lon = "PARCEL LEVEL LONGITUDE") %>% janitor::clean_names()
save(hist_property_basic5, file = "cleaning/output/hist_property_basic5.Rdata")
}
load("cleaning/output/hist_property_basic5.Rdata")
# Examine the data. 31080 has the highest frequency. It should be Los Angeles Metro Area
# Los Angeles–Long Beach–Anaheim, CA MSA 31080
# Riverside–San Bernardino–Ontario, CA MSA 40140
# Oxnard-Thousand Oaks-Ventura, CA MSA 37100
hist_property_basic5_full <- filter(hist_property_basic5, !is.na(lat), !is.na(lon))
hist_property_basic5_Los <- filter(hist_property_basic5_full, cbsa %in% c(31080,40140,37100))
hist_property_basic5_Los001p <- sample_frac(hist_property_basic5_Los, 0.0001)
hist_property_basic5_full001p <- hist_property_basic5_full %>% group_by(cbsa) %>% sample_frac(0.0001)
write.csv(hist_property_basic5_Los,"cleaning/output/hist_property_basic5_Los.csv", row.names = FALSE)
write.csv(hist_property_basic5_Los,"cleaning/output/hist_property_basic5_Los.csv", row.names = FALSE)
hist_property_basic5_full <- filter(hist_property_basic5, !is.na(lat), !is.na(lon))
hist_property_basic5_Los <- filter(hist_property_basic5_full, cbsa %in% c(31080,40140,37100))
hist_property_basic5_Los001p <- sample_frac(hist_property_basic5_Los, 0.0001)
hist_property_basic5_full001p <- hist_property_basic5_full %>% group_by(cbsa) %>% sample_frac(0.0001)
write.csv(hist_property_basic5_Los,"cleaning/output/hist_property_basic5_Los.csv", row.names = FALSE)
write.csv(hist_property_basic5_Los001p,"cleaning/output/hist_property_basic5_Los001p.csv", row.names = FALSE)
write.csv(hist_property_basic5_full2p,"cleaning/output/hist_property_basic5_full2p.csv", row.names = FALSE)
write.csv(hist_property_basic5_full001p,"cleaning/output/hist_property_basic5_full001p.csv", row.names = FALSE)
library(epiDisplay)
library(readxl)
library(plotly)
library(data.table)
library(tidyverse)
library(magrittr)
rm(list=ls())
variable_selection <- read_excel("raw/CoreLogic/variable selection/221016, Historical Property 5.xlsx") %>%
rename(list = "...1") %>%
pull(list) %>%
unlist %>%
as.numeric %>%
na.omit
hist_property_basic5_Los <- fread(file = "cleaning/output/hist_property_basic5_Los.csv", select = variable_selection) %>%
mutate(build_age=2015-year_built, effective_build_age=2015-effective_year_built) %>%
mutate(effective_build_age=ifelse(is.na(effective_build_age),build_age,effective_build_age)) %>%
filter(is.element(property_indicator_code, c(10,11,21,22)))
single_family_homes <- hist_property_basic5_Los %>% filter(property_indicator_code==10)
condo <- hist_property_basic5_Los %>% filter(property_indicator_code==11)
duplex <- hist_property_basic5_Los %>% filter(property_indicator_code==21)
apartment <- hist_property_basic5_Los %>% filter(property_indicator_code==22)
apartment_size_median <- quantile(apartment$living_square_feet_all_buildings/apartment$number_of_units,0.5, na.rm=T)
apartment_bed_median <- quantile(apartment$bedrooms_all_buildings/apartment$number_of_units,0.5, na.rm=T)
apartment_unit_median <- quantile(apartment$number_of_units,0.5, na.rm=T)
# Adjust NA sets
summary(apartment$number_of_units)
apartment_adj <- apartment %>%
mutate(adjustment_note=ifelse(is.na(number_of_units),
"Missing unit, assign median","Original")) %>%
mutate(number_of_units=ifelse(adjustment_note=="Missing unit, assign median",
floor(apartment_unit_median),number_of_units))
apartment_adj %<>%
mutate(adjustment_note=ifelse(adjustment_note=="Missing unit, assign median" & !is.na(bedrooms_all_buildings),
"Missing unit, infer from bedroom",adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Missing unit, infer from bedroom",
ceiling(bedrooms_all_buildings/apartment_bed_median),number_of_units))
apartment_adj %<>%
mutate(adjustment_note=ifelse(adjustment_note=="Missing unit, assign median" & !is.na(living_square_feet_all_buildings),
"Missing unit, infer from living space",adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Missing unit, infer from living space",
ceiling(living_square_feet_all_buildings/apartment_size_median),number_of_units))
tab1(apartment_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(apartment_adj$number_of_units)
# Adjust upper outliers
apartment_adj %<>%
mutate(adjustment_note= ifelse(living_square_feet_all_buildings/number_of_units> 3000,
"Upper outlier, cap living space", adjustment_note) %>%
ifelse(!is.na(living_square_feet_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Upper outlier, cap living space",
ceiling(living_square_feet_all_buildings/3000),number_of_units))
tab1(apartment_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(apartment_adj$number_of_units)
apartment_adj %<>%
mutate(adjustment_note=ifelse(bedrooms_all_buildings/number_of_units >= 4,
"Upper outlier, cap bedroom",adjustment_note) %>%
ifelse(!is.na(bedrooms_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Upper outlier, cap bedroom",
ceiling(bedrooms_all_buildings/apartment_bed_median),number_of_units))
tab1(apartment_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(apartment_adj$number_of_units)
# Adjust lower outliers
apartment_adj %<>%
mutate(adjustment_note=ifelse(living_square_feet_all_buildings/number_of_units < 200,
"Lower outlier, cap living space",adjustment_note) %>%
ifelse(!is.na(living_square_feet_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Lower outlier, cap living space",
floor(living_square_feet_all_buildings/200),number_of_units))
apartment_adj %<>%
mutate(adjustment_note=ifelse(bedrooms_all_buildings/number_of_units < 1,
"Lower outlier, cap bedroom",adjustment_note)%>%
ifelse(!is.na(bedrooms_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Lower outlier, cap bedroom",
bedrooms_all_buildings,number_of_units))
apartment_adj %<>%
mutate(number_of_units=ifelse(number_of_units==0,
1,number_of_units))
tab1(apartment_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(apartment_adj$number_of_units)
apartment_adj <- data.frame(lapply(apartment_adj,rep,apartment_adj$number_of_units)) %>%
mutate(assessed_total_value=assessed_total_value/number_of_units,
assessed_land_value=assessed_land_value/number_of_units,
assessed_improvement_value=assessed_improvement_value/number_of_units,
land_square_footage=land_square_footage/number_of_units,
bedrooms_all_buildings=bedrooms_all_buildings/number_of_units,
living_square_feet_all_buildings=living_square_feet_all_buildings/number_of_units)
condo_adj <- condo %>%
mutate(land_square_footage=land_square_footage/number_of_units) %>%
mutate(adjustment_note= "Original")
single_family_homes_adj <- single_family_homes %>%
mutate(adjustment_note= "Original")
duplex_size_median <- quantile(duplex$living_square_feet_all_buildings/duplex$number_of_units,0.5, na.rm=T)
duplex_bed_median <- quantile(duplex$bedrooms_all_buildings/duplex$number_of_units,0.5, na.rm=T)
duplex_unit_median <- quantile(duplex$number_of_units,0.5, na.rm=T)
# Adjust NA sets
summary(duplex$number_of_units)
duplex_adj <- duplex %>%
mutate(adjustment_note=ifelse(is.na(number_of_units),
"Missing unit, assign median","Original")) %>%
mutate(number_of_units=ifelse(adjustment_note=="Missing unit, assign median",
floor(duplex_unit_median),number_of_units))
duplex_adj %<>%
mutate(adjustment_note=ifelse(adjustment_note=="Missing unit, assign median" & !is.na(bedrooms_all_buildings),
"Missing unit, infer from bedroom",adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Missing unit, infer from bedroom",
ceiling(bedrooms_all_buildings/duplex_bed_median),number_of_units))
duplex_adj %<>%
mutate(adjustment_note=ifelse(adjustment_note=="Missing unit, assign median" & !is.na(living_square_feet_all_buildings),
"Missing unit, infer from living space",adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Missing unit, infer from living space",
ceiling(living_square_feet_all_buildings/duplex_size_median),number_of_units))
tab1(duplex_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(duplex_adj$number_of_units)
# Adjust upper outliers
duplex_adj %<>%
mutate(adjustment_note= ifelse(living_square_feet_all_buildings/number_of_units> 5000,
"Upper outlier, cap living space", adjustment_note) %>%
ifelse(!is.na(living_square_feet_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Upper outlier, cap living space",
ceiling(living_square_feet_all_buildings/5000),number_of_units))
tab1(duplex_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(duplex_adj$number_of_units)
duplex_adj %<>%
mutate(adjustment_note=ifelse(bedrooms_all_buildings/number_of_units >= 4,
"Upper outlier, cap bedroom",adjustment_note) %>%
ifelse(!is.na(bedrooms_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Upper outlier, cap bedroom",
ceiling(bedrooms_all_buildings/duplex_bed_median),number_of_units))
tab1(duplex_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(duplex_adj$number_of_units)
# Adjust lower outliers
duplex_adj %<>%
mutate(adjustment_note=ifelse(living_square_feet_all_buildings/number_of_units < 400,
"Lower outlier, cap living space",adjustment_note) %>%
ifelse(!is.na(living_square_feet_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Lower outlier, cap living space",
floor(living_square_feet_all_buildings/400),number_of_units))
duplex_adj %<>%
mutate(adjustment_note=ifelse(bedrooms_all_buildings/number_of_units < 1,
"Lower outlier, cap bedroom",adjustment_note)%>%
ifelse(!is.na(bedrooms_all_buildings/number_of_units), .,adjustment_note)) %>%
mutate(number_of_units=ifelse(adjustment_note=="Lower outlier, cap bedroom",
bedrooms_all_buildings,number_of_units))
duplex_adj %<>%
mutate(number_of_units=ifelse(number_of_units==0,
1,number_of_units))
tab1(duplex_adj$adjustment_note, sort.group = "decreasing", cum.percent = TRUE, graph = F)
summary(duplex_adj$number_of_units)
duplex_adj <- data.frame(lapply(duplex_adj,rep,duplex_adj$number_of_units)) %>%
mutate(assessed_total_value=assessed_total_value/number_of_units,
assessed_land_value=assessed_land_value/number_of_units,
assessed_improvement_value=assessed_improvement_value/number_of_units,
land_square_footage=land_square_footage/number_of_units,
bedrooms_all_buildings=bedrooms_all_buildings/number_of_units,
living_square_feet_all_buildings=living_square_feet_all_buildings/number_of_units)
hist_property_basic5_Los_adj <- rbind(clip,lat,lon,single_family_homes_adj,apartment_adj,condo_adj,duplex_adj) %>%
select(assessed_total_value,assessed_land_value,assessed_improvement_value,land_square_footage,bedrooms_all_buildings,living_square_feet_all_buildings,number_of_units,adjustment_note,property_indicator_code,build_age,effective_build_age)
hist_property_basic5_Los_adj <- rbind(single_family_homes_adj,apartment_adj,condo_adj,duplex_adj) %>%
select(clip,lat,lon,assessed_total_value,assessed_land_value,assessed_improvement_value,land_square_footage,bedrooms_all_buildings,living_square_feet_all_buildings,number_of_units,adjustment_note,property_indicator_code,build_age,effective_build_age)
# hist_property_basic5_Los_adj10p <- sample_frac(hist_property_basic5_Los_adj, 0.1)
write.csv(hist_property_basic5_Los_adj,"cleaning/output/hist_property_basic5_Los_adj.csv", row.names = FALSE)
# write.csv(hist_property_basic5_Los_adj10p,"cleaning/output/hist_property_basic5_Los_adj10p.csv", row.names = FALSE)
library(glue)
current_user <- Sys.info()["user"]
source(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - exercise/config.r"))
library(reshape2)
property_current <- readRDS(property_current_rds)
property_current %<>%
filter(
!is.na(col34) & !is.na(col48) &
!is.na(col49) & !is.na(col161) & !is.na(col202)
) %>%
mutate(temp_id = row_number())
property_current_remove <- property_current %>%
group_by(col34, col48, col49, col161) %>%
mutate(group_count = n()) %>%
filter(group_count > 2) %>%
mutate(q50 = quantile(col202, 0.50, na.rm = TRUE),
outliner = ifelse(col202 > q50*5,"c1","c0")) %>%
filter(any(outliner == "c1")) %>%
ungroup()
property_current_remove_sum <- property_current_remove %>%
group_by(col34, col48, col49, col161, outliner) %>%
summarize(col202_sum = sum(col202)) %>%
ungroup() %>%
pivot_wider(
names_from = outliner,
values_from = col202_sum,
id_cols = c("col34", "col48", "col49", "col161")
)
property_current_remove %<>% right_join(property_current_remove_sum, by = c("col34", "col48", "col49", "col161")) %>%
filter(
outliner == "c0" & c0 <= c1 |
outliner == "c1" & c0 > c1
) %>%
select(temp_id)
View(property_current)
View(property_current)
property_current_remove <- property_current %>%
group_by(col34, col48, col49, col161) %>%
mutate(group_count = n())
View(property_current_remove)
property_current_remove <- property_current %>%
group_by(col34, col48, col49, col161) %>%
mutate(group_count = n()) %>%
filter(group_count > 2) %>%
mutate(q50 = quantile(col202, 0.50, na.rm = TRUE),
outliner = ifelse(col202 > q50*5,"c1","c0"))
View(property_current)
View(property_current_remove)
library(glue)
current_user <- Sys.info()["user"]
source(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - exercise/config.r"))
library(reshape2)
property_current <- readRDS(property_current_rds)
property_current %<>%
filter(
!is.na(col34) & !is.na(col48) &
!is.na(col49) & !is.na(col161) & !is.na(col202)
) %>%
mutate(temp_id = row_number())
property_current_remove <- property_current %>%
group_by(col34, col48, col49, col161) %>%
mutate(group_count = n()) %>%
filter(group_count > 2) %>%
mutate(q50 = quantile(col202, 0.50, na.rm = TRUE),
outliner = ifelse(col202 > q50*5,"c1","c0")) %>%
filter(any(outliner == "c1")) %>%
ungroup()
if (nrow(property_current_remove==0)){
property_current_adj_floorspace <- property_current
} else {
property_current_remove_sum <- property_current_remove %>%
group_by(col34, col48, col49, col161, outliner) %>%
summarize(col202_sum = sum(col202)) %>%
ungroup() %>%
pivot_wider(
names_from = outliner,
values_from = col202_sum,
id_cols = c("col34", "col48", "col49", "col161")
)
property_current_remove %<>% right_join(property_current_remove_sum, by = c("col34", "col48", "col49", "col161")) %>%
filter(
outliner == "c0" & c0 <= c1 |
outliner == "c1" & c0 > c1
) %>%
select(temp_id)
property_current_adj_floorspace <- anti_join(property_current, property_current_remove, by = "temp_id") %>%
select(-temp_id)
}
rlang::last_trace()
nrow(property_current_remove==0)
if (nrow(property_current_remove)==0){
property_current_adj_floorspace <- property_current
} else {
property_current_remove_sum <- property_current_remove %>%
group_by(col34, col48, col49, col161, outliner) %>%
summarize(col202_sum = sum(col202)) %>%
ungroup() %>%
pivot_wider(
names_from = outliner,
values_from = col202_sum,
id_cols = c("col34", "col48", "col49", "col161")
)
property_current_remove %<>% right_join(property_current_remove_sum, by = c("col34", "col48", "col49", "col161")) %>%
filter(
outliner == "c0" & c0 <= c1 |
outliner == "c1" & c0 > c1
) %>%
select(temp_id)
property_current_adj_floorspace <- anti_join(property_current, property_current_remove, by = "temp_id") %>%
select(-temp_id)
}
property_current_land_sum <- property_current_adj_floorspace %>%
group_by(col48, col49, col161) %>%
summarize(col202_sum = sum(col202))
property_current_adj_land <- full_join(property_current_adj_floorspace, property_current_land_sum, by = c("col48", "col49", "col161")) %>%
mutate(adj_land = col161*(col202/col202_sum), adj_f_ratio = col202/adj_land)
saveRDS(property_current_adj_land, property_c_fadj_rds)
