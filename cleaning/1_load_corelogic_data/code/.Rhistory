select(-N) %>%
ungroup()
data1 = mortgage_data_process %>%
merge(match_dict1, by = 'mID') %>%
merge(hmda_data_process, by = 'hID')
View(data1)
data2 = mortgage_data_process %>%
merge(match_dict2, by = 'mID') %>%
merge(hmda_data_process, by = 'hID')
View(data2)
data1 = mortgage_data_process %>%
merge(match_dict1, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount"))
data2 = mortgage_data_process %>%
merge(match_dict2, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount"))
library(glue)
current_user <- Sys.info()["user"]
source(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - exercise/config.r"))
library(data.table)
hmda_data <- readRDS(hmda_data_rds)
property_cdict <- read.csv(property_cdict_xwalk_csv) %>%
select(col1, tractID20, tractID19, tractID08) %>%
mutate(col1 = as.character(col1), tractID20 = as.character(tractID20), tractID19 = as.character(tractID19), tractID08 = as.character(tractID08) )
mortgage_data <- readRDS(mortgage_current_rds) %>%
merge(property_cdict, by = 'col1')
mortgage_data_process <- mortgage_data %>%
mutate(tractID = ifelse(year>=2010,paste0("19" ,tractID19), paste0("08",tractID08))) %>%
mutate(tractID = ifelse(year==2020,paste0("20" ,tractID20), tractID)) %>%
select(-tractID19,-tractID20,-tractID08)%>%
mutate(mID = 1:n())
hmda_data_process <- hmda_data %>%
mutate(tractID = ifelse(year>=2010,paste0("19" ,tractID), paste0("08",tractID))) %>%
mutate(tractID = ifelse(year==2020,paste0("20" ,tractID), tractID)) %>%
filter(hm_owner_occupancy == 1)%>%
rename(m_amount = hm_loan_amount)%>%
mutate(hID = 1:n())%>%
select(-hm_owner_occupancy)
### First Match. Base on year, tractID, m_amount
hmda1 <- hmda_data_process %>%
group_by(year, tractID, m_amount) %>%
dplyr::summarize(hID = first(hID), respondent_id = first(respondent_id), N = n()) %>%
filter(N == 1) %>%
select(-N) %>%
ungroup()
mortgage1 <- mortgage_data_process %>%
group_by(year, tractID, m_amount) %>%
dplyr::summarize(mID = first(mID),m_lendn=first(m_lendn),m_lendc108=first(m_lendc108), N = n()) %>%
filter(N==1) %>%
select(-N) %>%
ungroup()
merge1 <- merge(hmda1, mortgage1, by = c("year", "tractID", "m_amount"), all = FALSE)
match_dict1 <- merge1 %>% select(hID, mID)
respondent_dict0 <- merge1 %>% group_by(respondent_id, m_lendn) %>%
dplyr::summarize(resp_N = n()) %>%
ungroup() %>%
filter(m_lendn != '* OTHER INSTITUTIONAL LENDERS', m_lendn != '')
weighted.mode <- function(x, w) {
unique_x <- unique(x)
unique_weights <- tapply(w, x, sum)
unique_x[which.max(unique_weights)]
}
respondent_dict1 <- respondent_dict0 %>%
group_by(respondent_id) %>%
dplyr::summarize(m_lendn = as.character(weighted.mode(m_lendn, resp_N)))
respondent_dict2 <- respondent_dict0 %>%
group_by(m_lendn) %>%
dplyr::summarize(respondent_id = as.character(weighted.mode(respondent_id, resp_N)))
### Second Match. Base on year, tractID, m_amount, and respondent_id
hmda2 <- hmda_data_process %>%
anti_join(match_dict1, by = "hID") %>%
group_by(year, tractID, m_amount, respondent_id) %>%
dplyr::summarize(hID = first(hID), N = n()) %>%
filter(N==1) %>%
select(-N) %>%
ungroup()
mortgage2 <- mortgage_data_process %>%
anti_join(match_dict1, by = "mID") %>%
group_by(year, tractID, m_amount, m_lendn) %>%
dplyr::summarize(mID = first(mID), N = n()) %>%
filter(N==1) %>%
select(-N) %>%
ungroup()
hmda2a <- merge(hmda2, respondent_dict1, by = 'respondent_id')
merge2 <- merge(hmda2a, mortgage2, by = c("year", "tractID", "m_amount","m_lendn"), all = FALSE) %>% select(hID, mID)
match_dict2 <- rbind(match_dict1,merge2)
mortgage2b <- merge(mortgage2, respondent_dict2, by = 'm_lendn')
merge2b <- merge(mortgage2b, hmda2, by = c("year", "tractID", "m_amount","respondent_id"), all = FALSE) %>% select(hID, mID)
match_dict2 <- rbind(match_dict2,merge2b)%>% distinct(hID, mID) %>%
group_by(hID) %>%
dplyr::summarize(mID = first(mID), N=n()) %>%
filter(N==1)%>%
select(-N) %>%
ungroup()
### Third Match. Base on year, tractID, m_amount, and respondent_id N-to-N matching
hmda3 <- hmda_data_process %>%
anti_join(match_dict, by = "hID")%>%
group_by(year, tractID, m_amount, respondent_id) %>%
dplyr::summarize(hID = first(hID), N = n()) %>%
filter(N==1) %>%
select(-N) %>%
ungroup()
hmda3 <- hmda_data_process %>%
anti_join(match_dict2, by = "hID")%>%
group_by(year, tractID, m_amount, respondent_id) %>%
dplyr::summarize(hID = first(hID), N = n()) %>%
filter(N==1) %>%
select(-N) %>%
ungroup()
mortgage3 <- mortgage_data_process %>%
anti_join(match_dict2, by = "mID")%>%
group_by(year, tractID, m_amount, m_lendn) %>%
dplyr::summarize(mID = first(mID), N = n()) %>%
filter(N==1) %>%
select(-N) %>%
ungroup()
#mortgage_data_check <- mortgage_data_process %>%
#  merge(match_dict, by = 'mID') %>%
#  distinct(col1)
respondent_dict0a <- respondent_dict0
respondent_dict0b <- respondent_dict0a %>%
group_by(respondent_id) %>%
dplyr::summarize(m_lendn = first(m_lendn))%>%
ungroup()
N <- respondent_dict0a %>%
group_by(respondent_id) %>% dplyr::summarize(N = n()) %>% ungroup() %>% dplyr::summarize(N = max(N)) %>% pull(N)
hmda3a <- merge(hmda3, respondent_dict0b, by = 'respondent_id')
merge3 <- merge(mortgage3, hmda3a, by = c("year", "tractID", "m_amount","m_lendn"), all = FALSE) %>% select(hID, mID)
match_dict3 <- rbind(match_dict2,merge3)
for (i in 1: N-1){
print(i)
respondent_dict0a <- anti_join(respondent_dict0a,respondent_dict0b,by = c('respondent_id','m_lendn'))
respondent_dict0b <- respondent_dict0a %>%
group_by(respondent_id) %>%
dplyr::summarize(m_lendn = first(m_lendn))%>%
ungroup()
print(nrow(respondent_dict0b))
hmda3a <- merge(hmda3, respondent_dict0b, by = 'respondent_id')
merge3 <- merge(mortgage3, hmda3a, by = c("year", "tractID", "m_amount","m_lendn"), all = FALSE) %>% select(hID, mID)
match_dict3 <- rbind(match_dict3,merge3)
}
match_dict3 <- match_dict3 %>%
distinct(hID, mID) %>%
group_by(hID) %>%
dplyr::summarize(mID = first(mID), N=n()) %>%
filter(N==1)%>%
select(-N) %>%
ungroup()
data1 = mortgage_data_process %>%
merge(match_dict1, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount"))
data2 = mortgage_data_process %>%
merge(match_dict2, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount"))
data3 = mortgage_data_process %>%
merge(match_dict3, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount"))
saveRDS(data1, file = mortgage_merge1_rds)
saveRDS(data2, file = mortgage_merge2_rds)
saveRDS(data3, file = mortgage_merge3_rds)
mortgage_data_check <- mortgage_data_process %>%
merge(match_dict3, by = 'mID') %>%
distinct(col1)
print(len(property_cdict))
print(length(property_cdict))
print(nrow(property_cdict))
print(nrow(mortgage_data))
print(nrow(mortgage_data %>% distinct(col1)))
View(data1)
data1 = mortgage_data_process %>%
merge(match_dict1, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount"))
deflator <- glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - database/raw/FRED/CUURA103SA0.csv")
deflator <- read_csv(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - database/raw/FRED/CUURA103SA0.csv"))
View(deflator)
deflator <- read_csv(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - database/raw/FRED/CUURA103SA0.csv")) %>%
mutate(CUURA103SA0 = CUURA103SA0/266.9210)
View(deflator)
mutate(deflator = deflator/266.9210)
deflator_df <- read_csv(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - database/raw/FRED/CUURA103SA0.csv")) %>%
rename(deflator = CUURA103SA0)
deflator_df <- read_csv(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - database/raw/FRED/CUURA103SA0.csv")) %>%
rename(deflator = CUURA103SA0) %>%
mutate(deflator = deflator/266.9210)
data1 = mortgage_data_process %>%
merge(match_dict1, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount")) %>%
merge(deflator_df, by = 'year')
View(data1)
data1 = mortgage_data_process %>%
merge(match_dict1, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount")) %>%
merge(deflator_df, by = 'year') %>%
rename(m_year = year) %>%
mutate(m_amount = m_amount/deflator, hm_income = hm_income/deflator) %>%
keep(m_year, m_amount, col1, ethnicity, hm_sex, hm_income, dm_asian, dm_white, dm_african)
data1 = mortgage_data_process %>%
merge(match_dict1, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount")) %>%
merge(deflator_df, by = 'year') %>%
rename(m_year = year)
data1 = mortgage_data_process %>%
merge(match_dict1, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount")) %>%
merge(deflator_df, by = 'year') %>%
rename(m_year = year) %>%
mutate(m_amount = m_amount/deflator, hm_income = hm_income/deflator) %>%
keep(m_year, m_amount, col1, ethnicity, hm_sex, hm_income, dm_asian, dm_white, dm_african)
data1 = mortgage_data_process %>%
merge(match_dict1, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount")) %>%
merge(deflator_df, by = 'year') %>%
rename(m_year = year) %>%
mutate(m_amount = m_amount/deflator, hm_income = hm_income/deflator) %>%
select(m_year, m_amount, col1, ethnicity, hm_sex, hm_income, dm_asian, dm_white, dm_african)
data2 = mortgage_data_process %>%
merge(match_dict2, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount")) %>%
merge(deflator_df, by = 'year') %>%
rename(m_year = year) %>%
mutate(m_amount = m_amount/deflator, hm_income = hm_income/deflator) %>%
select(m_year, m_amount, col1, ethnicity, hm_sex, hm_income, dm_asian, dm_white, dm_african)
data3 = mortgage_data_process %>%
merge(match_dict3, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount")) %>%
merge(deflator_df, by = 'year') %>%
rename(m_year = year) %>%
mutate(m_amount = m_amount/deflator, hm_income = hm_income/deflator) %>%
select(m_year, m_amount, col1, ethnicity, hm_sex, hm_income, dm_asian, dm_white, dm_african)
saveRDS(data1, file = mortgage_merge1_rds)
saveRDS(data2, file = mortgage_merge2_rds)
saveRDS(data3, file = mortgage_merge3_rds)
print(nrow(mortgage_data_process %>% merge(match_dict3, by = 'mID') )
)
frequency_table(data1$m_year)
frequency_table(data2$m_year)
View(mortgage_data)
View(hmda_data)
mortgage_data_process <- mortgage_data %>%
mutate(tractID = ifelse(year>=2010,paste0("19" ,tractID19), paste0("08",tractID08))) %>%
mutate(tractID = ifelse(year==2020,paste0("20" ,tractID20), tractID)) %>%
select(-tractID19,-tractID20,-tractID08)%>%
mutate(mID = 1:n())%>%
filter(year = 2020)
mortgage_data_process <- mortgage_data %>%
mutate(tractID = ifelse(year>=2010,paste0("19" ,tractID19), paste0("08",tractID08))) %>%
mutate(tractID = ifelse(year==2020,paste0("20" ,tractID20), tractID)) %>%
select(-tractID19,-tractID20,-tractID08)%>%
mutate(mID = 1:n())%>%
filter(year == 2020)
hmda_data_process <- hmda_data %>%
mutate(tractID = ifelse(year>=2010,paste0("19" ,tractID), paste0("08",tractID))) %>%
mutate(tractID = ifelse(year==2020,paste0("20" ,tractID), tractID)) %>%
filter(hm_owner_occupancy == 1)%>%
rename(m_amount = hm_loan_amount)%>%
mutate(hID = 1:n())%>%
select(-hm_owner_occupancy)%>%
filter(year == 2020)
mortgage_data_process <- mortgage_data %>%
mutate(tractID = ifelse(year>=2010,paste0("19" ,tractID19), paste0("08",tractID08))) %>%
mutate(tractID = ifelse(year==2020,paste0("20" ,tractID20), tractID)) %>%
select(-tractID19,-tractID20,-tractID08)%>%
mutate(mID = 1:n())%>%
filter(year != 2020)
hmda_data_process <- hmda_data %>%
mutate(tractID = ifelse(year>=2010,paste0("19" ,tractID), paste0("08",tractID))) %>%
mutate(tractID = ifelse(year==2020,paste0("20" ,tractID), tractID)) %>%
filter(hm_owner_occupancy == 1)%>%
rename(m_amount = hm_loan_amount)%>%
mutate(hID = 1:n())%>%
select(-hm_owner_occupancy)%>%
filter(year != 2020)
print(nrow(mortgage_data_process %>% distinct(col1)))
View(hmda1)
View(hmda_data)
frequency_table(hmda_data_process$hm_purpose_code)
data1 = mortgage_data_process %>%
merge(match_dict1, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount")) %>%
merge(deflator_df, by = 'year') %>%
rename(m_year = year) %>%
mutate(m_amount = m_amount/deflator, hm_income = hm_income/deflator) %>%
select(col1, m_year, m_amount, ethnicity, hm_sex, hm_income, dm_asian, dm_white, dm_african, hm_purpose_code)
data2 = mortgage_data_process %>%
merge(match_dict2, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount")) %>%
merge(deflator_df, by = 'year') %>%
rename(m_year = year) %>%
mutate(m_amount = m_amount/deflator, hm_income = hm_income/deflator) %>%
select(col1, m_year, m_amount, ethnicity, hm_sex, hm_income, dm_asian, dm_white, dm_african, hm_purpose_code)
data3 = mortgage_data_process %>%
merge(match_dict3, by = 'mID') %>%
merge(hmda_data_process, by = c('hID',"year", "tractID", "m_amount")) %>%
merge(deflator_df, by = 'year') %>%
rename(m_year = year) %>%
mutate(m_amount = m_amount/deflator, hm_income = hm_income/deflator) %>%
select(col1, m_year, m_amount, ethnicity, hm_sex, hm_income, dm_asian, dm_white, dm_african, hm_purpose_code)
saveRDS(data1, file = mortgage_merge1_rds)
saveRDS(data2, file = mortgage_merge2_rds)
saveRDS(data3, file = mortgage_merge3_rds)
frequency_table(data1$hm_purpose_code)
frequency_table(data2$hm_purpose_code)
library(glue)
current_user <- Sys.info()["user"]
source(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - exercise/config.r"))
library(data.table)
define_counties <- function(){
if (run_code == "ca"){
sf_counties <- c(06001, 06013, 06041, 06047, 06055, 06069, 06075, 06077, 06081, 06085, 06087, 06095, 06097, 06099)
los_counties <- c(06037, 06059, 06111, 06071, 06065)
san_diego <- c(06073)
counties <- c(sf_counties,los_counties,san_diego)
} else if (run_code == "tx") {
dallas_counties <- c(48085, 48113, 48121, 48139, 48231, 48257, 48397, 48251, 48367, 48439, 48497)
houston_counties <- c(48015, 48039, 48071, 48157, 48167, 48201, 48291, 48339, 48473)
counties <- c(dallas_counties,houston_counties)
} else if (run_code == "ny") {
ny_ny_counties <- c(36047, 36081, 36061, 36005, 36085, 36119, 36079, 36071, 36087, 36059, 36103)
counties <- ny_ny_counties
} else if (run_code == "nj") {
ny_nj_counties <- c(34003, 34017, 34031, 34023, 34025, 34029, 34035, 34013, 34039, 34027, 34037, 34019)
counties <- ny_nj_counties
} else if (run_code == "ma") {
boston_counties <- c(25009, 25017, 25021, 25023, 25025, 25027)
counties <- boston_counties
}
return(counties)
}
process_procedure <- function(prop_data) {
counties <- define_counties()
prop_data <- prop_data %>%
filter(col3 %in% counties) %>%
filter(
!is.na(col48) & !is.na(col49)
)
# Convert data types
prop_data$col41 <- as.integer(prop_data$col41)
prop_data$col201 <- as.integer(prop_data$col201)
prop_data$col161 <- as.numeric(prop_data$col161)
prop_data$col202 <- as.numeric(prop_data$col202)
# Add new columns
s <- c(163)
sm <- c(100, 102, 148, 115, 151, 165, 132)
lm <- c(111, 112, 117, 106, 133)
prop_data <- prop_data %>%
filter(col34 %in% c(s,sm,lm)) %>%
mutate(house_type = case_when(col34 %in% s ~ "s",
col34 %in% sm ~ "sm",
col34 %in% lm ~ "lm",
TRUE ~ NA_character_),
col202 = ifelse(col202 < 100, NA, col202),
col161 = ifelse(col161 < 100, NA, col161),
f_ratio = col202/col161)
return(prop_data)
}
# Load data
file_list <- unzip(property_current, list = TRUE)
txt_file <- file_list$Name[grep(".txt$", file_list$Name)]
prop_data <- fread(unzip(property_current, files = txt_file), select = c(1, 3, 34, 41, 48, 49, 161, 163, 201, 202, 142, 144, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 165, 149, 151), skip = 1, header = FALSE, sep = "|")
names(prop_data) <- paste0("col", c(1, 3, 34, 41, 48, 49, 161, 163, 201, 202, 142, 144, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 165, 149, 151))
file.remove(txt_file)
prop_data <- process_procedure(prop_data)
# Export data
saveRDS(prop_data, file = property_current_rds)
coord_dict <- prop_data %>% select(col1, col48, col49)
coord_dict[] <- lapply(coord_dict, as.character)
write.csv(coord_dict, property_coord_dict_csv, quote = TRUE, row.names = FALSE)
View(prop_data)
library(glue)
current_user <- Sys.info()["user"]
source(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - exercise/config.r"))
library(reshape2)
property_current <- readRDS(property_current_rds)
property_current %<>%
filter(
!is.na(col34) & !is.na(col48) &
!is.na(col49) & !is.na(col161) & !is.na(col202)
) %>%
mutate(temp_id = row_number())
property_current_remove <- property_current %>%
group_by(col34, col48, col49, col161) %>%
mutate(group_count = n()) %>%
filter(group_count > 2) %>%
mutate(q50 = quantile(col202, 0.50, na.rm = TRUE),
outliner = ifelse(col202 > q50*5,"c1","c0")) %>%
filter(any(outliner == "c1")) %>%
ungroup()
if (nrow(property_current_remove)==0){
property_current_adj_floorspace <- property_current
} else {
property_current_remove_sum <- property_current_remove %>%
group_by(col34, col48, col49, col161, outliner) %>%
summarize(col202_sum = sum(col202)) %>%
ungroup() %>%
pivot_wider(
names_from = outliner,
values_from = col202_sum,
id_cols = c("col34", "col48", "col49", "col161")
)
property_current_remove %<>% right_join(property_current_remove_sum, by = c("col34", "col48", "col49", "col161")) %>%
filter(
outliner == "c0" & c0 <= c1 |
outliner == "c1" & c0 > c1
) %>%
select(temp_id)
property_current_adj_floorspace <- anti_join(property_current, property_current_remove, by = "temp_id") %>%
select(-temp_id)
}
property_current_land_sum <- property_current_adj_floorspace %>%
group_by(col48, col49, col161) %>%
summarize(col202_sum = sum(col202))
property_current_adj_land <- full_join(property_current_adj_floorspace, property_current_land_sum, by = c("col48", "col49", "col161")) %>%
mutate(adj_land = col161*(col202/col202_sum), adj_f_ratio = col202/adj_land)
saveRDS(property_current_adj_land, property_c_fadj_rds)
View(property_current_adj_land)
library(glue)
current_user <- Sys.info()["user"]
source(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - exercise/config.r"))
property_xwalk_bg <- read.csv(output_dir + 'property_xwalk_bg.csv', header = TRUE, sep = ",")
property <- readRDS(property_c_fadj_rds)
View(property)
property <- readRDS(property_c_fadj_rds) %>% merge(property_xwalk_bg, by = "col1")
property <- readRDS(property_c_fadj_rds)
View(property)
View(property)
View(property_xwalk_bg)
property <- readRDS(property_c_fadj_rds)
View(property)
property <- readRDS(property_c_fadj_rds) %>% merge(property_xwalk_bg, by = "col1")
library(glue)
current_user <- Sys.info()["user"]
source(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - exercise/config.r"))
property_xwalk_bg <- read.csv(output_dir + 'property_xwalk_bg.csv', header = TRUE, sep = ",")
property <- readRDS(property_c_fadj_rds)
property$col1 <- as.integer(property$col1)
property_xwalk_bg$col1 <- as.integer(property_xwalk_bg$col1)
merged_data <- merge(property, property_xwalk_bg, by = "col1")
View(property)
property <- readRDS(property_c_fadj_rds)
View(property)
property_xwalk_bg <- read.csv(output_dir + 'property_xwalk_bg.csv', header = TRUE, sep = ",")
property <- readRDS(property_c_fadj_rds)
property$col1 <- as.character(property$col1)
property_xwalk_bg$col1 <- as.character(property_xwalk_bg$col1)
merged_data <- merge(property, property_xwalk_bg, by = "col1")
View(merged_data)
summary <- merged_data %>%
group_by('STATEFP', 'COUNTYFP', 'TRACTCE','BLKGRPCE')
View(merged_data)
summary <- merged_data %>%
group_by('STATEFP', 'COUNTYFP', 'TRACTCE','BLKGRPCE')  %>%
summarize(total_land = adj_land)
View(summary)
summary <- merged_data %>%
group_by(STATEFP, COUNTYFP, TRACTCE,BLKGRPCE)  %>%
summarize(total_land = adj_land)
View(summary)
summary <- merged_data %>%
group_by(STATEFP, COUNTYFP, TRACTCE,BLKGRPCE)  %>%
summarize(total_land = sum(adj_land))
View(summary)
write.csv(summary, file = output_dir + "bg_total_land.csv", row.names = FALSE)
View(summary)
library(glue)
current_user <- Sys.info()["user"]
source(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - exercise/config.r"))
property_xwalk_bg <- read.csv(output_dir + 'property_xwalk_bg.csv', header = TRUE, sep = ",")
property <- readRDS(property_c_fadj_rds)
property$col1 <- as.character(property$col1)
property_xwalk_bg$col1 <- as.character(property_xwalk_bg$col1)
merged_data <- merge(property, property_xwalk_bg, by = "col1")
summary <- merged_data %>%
group_by(STATEFP, COUNTYFP, TRACTCE,BLKGRPCE)  %>%
summarize(total_land = sum(adj_land))
write.csv(summary, file = output_dir + "bg_total_land.csv", row.names = FALSE)
write.csv(summary, file = output_dir + "bg_total_land.csv", row.names = FALSE)
library(glue)
current_user <- Sys.info()["user"]
source(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - exercise/config.r"))
library(utils)
library(lfe)
property_current <- readRDS(property_apt_rds)
property_current_mod <- property_current %>%
mutate(dupac = col201/adj_land*43560, pu_size = col202_sum/col201, pu_land = adj_land/col201, far =col202_sum/adj_land )%>%
filter(pu_size<5000, pu_size>500)
nonparametric_plot(property_current_mod,'pu_land','pu_size',5,95)
library(glue)
current_user <- Sys.info()["user"]
source(glue("C:/Users/{current_user}/OneDrive - The Pennsylvania State University/2207 - Zoning - exercise/config.r"))
library(mgcv)
library(lfe)
library(sf)
property_current <- readRDS(property_apt_rds)
property_coord_dict <- read.csv(property_cdict_xwalk_csv) %>%
mutate(col1 = as.character((col1)))
coordinates <- st_as_sf(property_current, coords = c("col49", "col48"), crs = 4326)
specific_point <- st_point(c(-71.05804050694815,42.36038876047336))
specific_point <- st_sfc(specific_point, crs = 4326)
specific_point_utm <- st_transform(specific_point, 32619)
coordinates_utm <- st_transform(coordinates, 32619)
property_current$distance <- st_distance(coordinates_utm, specific_point_utm)
property_current$distance <- as.numeric(property_current$distance)
property_current_mod <- property_current %>%
merge(property_coord_dict, by = 'col1') %>%
mutate(dupac = col201/adj_land*43560, pu_size = col202_sum/col201, perland = adj_land/col201)%>%
filter(pu_size<5000, pu_size>500, dupac_eff!= 0)%>%
mutate(eff_minsize = 43560/dupac_eff)%>%
mutate(cutoff = ifelse(eff_minsize*1 > perland & eff_minsize*0.5 < perland,1,0))%>%
mutate(close = ifelse(distance<20000,1,0))%>%
mutate(zone_id = paste0(dupac_eff, "_", tractID19)) %>%
mutate(below_cutoff = ifelse(eff_minsize*0.5 >= perland,1,0)) %>%
mutate(zone_ratio = perland/eff_minsize)
