{"frames":[{"func":"library(tidyverse)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch({\n    attr(package, \"LibPath\") <- which.lib.loc\n    ns <- loadNamespace(package, lib.loc)\n    env <- attachNamespace(ns, pos = pos, deps, exclude, include.only) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"loadNamespace(package, lib.loc)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"namespaceImportFrom(ns, loadNamespace(j <- i[[1L]], c(lib.loc, \n    .libPaths()), versionCheck = vI[[j]]), i[[2L]], from = package)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"asNamespace(ns)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"namespaceImport(ns, loadNamespace(i, c(lib.loc, .libPaths()), \n    versionCheck = vI[[i]]), from = package)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"try(sys.source(codeFile, env, keep.source = keep.source, keep.parse.data = keep.parse.data))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(expr, error = function(e) {\n    call <- conditionCall(e)\n    if (!is.null(call)) {\n        if (identical(call[[1L]], quote(doTryCatch)))  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"sys.source(codeFile, env, keep.source = keep.source, keep.parse.data = keep.parse.data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"cyclic namespace dependency detected when loading ‘dplyr’, already loading ‘dbplyr’, ‘dplyr’, ‘broom’, ‘tidyverse’"}